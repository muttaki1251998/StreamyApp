{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/muttaki/ReactAgain/stream/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [this.renderAdminButtons(stream), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large middle aligned icon camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [stream.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: stream.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  renderAdminButtons(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button negative\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), this.renderCreate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/home/muttaki/ReactAgain/stream/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","props","renderList","streams","map","stream","renderAdminButtons","title","description","id","renderCreate","isSignedIn","userId","currentUserId","render","mapStateToProps","state","Object","values","auth"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAEvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,YAAX;AACD;;AAEDK,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,GAAnB,CAAuBC,MAAM,IAAI;AACtC,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,mBACG,KAAKC,kBAAL,CAAwBD,MAAxB,CADH,eAEE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,qBACGA,MAAM,CAACE,KADV,eAEE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAA8BF,MAAM,CAACG;AAArC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAA2BH,MAAM,CAACI,EAAlC;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXM,CAAP;AAYD;;AAEDC,EAAAA,YAAY,GAAG;AACb,QAAG,KAAKT,KAAL,CAAWU,UAAd,EAA0B;AACxB,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF;;AAEDL,EAAAA,kBAAkB,CAACD,MAAD,EAAS;AACzB,QAAIA,MAAM,CAACO,MAAP,KAAkB,KAAKX,KAAL,CAAWY,aAAjC,EAAgD;AAC9C,0BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAOG,KAAKH,YAPR;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD;AACF;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBAAiC,KAAKZ,UAAL;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAtDsC;;AAyDzC,MAAMa,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLb,IAAAA,OAAO,EAAEc,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACb,OAApB,CADJ;AAELU,IAAAA,aAAa,EAAEG,KAAK,CAACG,IAAN,CAAWP,MAFrB;AAGLD,IAAAA,UAAU,EAAEK,KAAK,CAACG,IAAN,CAAWR;AAHlB,GAAP;AAKD,CAND;;AAQA,eAAef,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return (\n        <div className=\"item\" key={stream.id}>\n          {this.renderAdminButtons(stream)}\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            {stream.title}\n            <div className=\"description\">{stream.description}</div>\n          </div>\n        </div>\n      );\n    })\n  }\n\n  renderCreate() {\n    if(this.props.isSignedIn) {\n      return(\n        <div>\n          Create\n        </div>\n      );\n    }\n  }\n\n  renderAdminButtons(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return (\n        <div className=\"right floated content\">\n          <button className=\"ui button primary\">\n            Edit\n          </button>\n          <button className=\"ui button negative\">\n            Delete\n          </button>\n          {this.renderCreate}\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">{this.renderList()}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  }\n}\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);"]},"metadata":{},"sourceType":"module"}