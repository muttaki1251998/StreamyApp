{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/muttaki/ReactAgain/stream/client/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) this.props.signIn(this.auth.currentUser.get().getId());else this.props.signOut();\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: \"106672197064-qbeo1m4gtu5q693nhi19e56v7jjekm1h.apps.googleusercontent.com\",\n        scope: \"email\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onSignOutClick,\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), \"Sign out\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onSignInClick,\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), \"Sign in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/home/muttaki/ReactAgain/stream/client/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","onAuthChange","isSignedIn","props","auth","currentUser","get","getId","onSignInClick","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAevCC,YAfuC,GAevBC,UAAD,IAAgB;AAC7B,UAAGA,UAAH,EACE,KAAKC,KAAL,CAAWN,MAAX,CAAkB,KAAKO,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAlB,EADF,KAGE,KAAKJ,KAAL,CAAWL,OAAX;AACH,KApBsC;;AAAA,SAsBvCU,aAtBuC,GAsBvB,MAAM;AACpB,WAAKJ,IAAL,CAAUP,MAAV;AACD,KAxBsC;;AAAA,SA0BvCY,cA1BuC,GA0BtB,MAAM;AACrB,WAAKL,IAAL,CAAUN,OAAV;AACD,KA5BsC;AAAA;;AAEvCY,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACtBC,QAAAA,QAAQ,EAAE,0EADY;AAEtBC,QAAAA,KAAK,EAAE;AAFe,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACZ,aAAKd,IAAL,GAAYO,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKnB,YAAL,CAAkB,KAAKG,IAAL,CAAUF,UAAV,CAAqBI,GAArB,EAAlB;AACA,aAAKF,IAAL,CAAUF,UAAV,CAAqBmB,MAArB,CAA4B,KAAKpB,YAAjC;AACD,OAPD;AAQD,KATD;AAUD;;AAiBDqB,EAAAA,gBAAgB,GAAE;AAChB,QAAG,KAAKnB,KAAL,CAAWD,UAAX,KAA0B,IAA7B,EAAkC;AAChC,aAAO,IAAP;AACD,KAFD,MAGK,IAAG,KAAKC,KAAL,CAAWD,UAAd,EAAyB;AAC5B,0BACE;AAAQ,QAAA,OAAO,EAAE,KAAKO,cAAtB;AAAsC,QAAA,SAAS,EAAC,sBAAhD;AAAA,gCACA;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPI,MAOA;AACH,0BACE;AAAQ,QAAA,OAAO,EAAE,KAAKD,aAAtB;AAAqC,QAAA,SAAS,EAAC,sBAA/C;AAAA,gCACA;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;AACF;;AAEDe,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,gBACG,KAAKD,gBAAL;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAzDsC;;AA4DzC,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEvB,IAAAA,UAAU,EAAEuB,KAAK,CAACrB,IAAN,CAAWF;AAAzB,GAAP;AACD,CAFD;;AAIA,eAAeN,OAAO,CAAC4B,eAAD,EAAkB;AAAC3B,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAlB,CAAP,CAA4CC,UAA5C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  \n  componentDidMount(){\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: \"106672197064-qbeo1m4gtu5q693nhi19e56v7jjekm1h.apps.googleusercontent.com\",\n        scope: \"email\"\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if(isSignedIn)\n      this.props.signIn(this.auth.currentUser.get().getId());\n    else\n      this.props.signOut();\n  }\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  }\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  }\n\n  renderAuthButton(){\n    if(this.props.isSignedIn === null){\n      return null;\n    }\n    else if(this.props.isSignedIn){\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui red google button\" >\n        <i className=\"google icon\"/>\n        Sign out\n        </button>\n      )\n    }else{\n      return(\n        <button onClick={this.onSignInClick} className=\"ui red google button\" >\n        <i className=\"google icon\"/>\n        Sign in\n        </button>\n      )\n    }\n  }\n\n  render(){\n    return(\n      <div>\n        {this.renderAuthButton()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { isSignedIn: state.auth.isSignedIn }\n}\n\nexport default connect(mapStateToProps, {signIn, signOut})(GoogleAuth);"]},"metadata":{},"sourceType":"module"}