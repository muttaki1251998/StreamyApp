{"ast":null,"code":"import { CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM } from '../actions/types';\nimport _ from 'lodash';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case CREATE_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case FETCH_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n\n    case FETCH_STREAMS:\n      return { ...state,\n        ..._.mapKeys(action.payload, 'id')\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/muttaki/ReactAgain/stream/client/src/reducers/streamReducer.js"],"names":["CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","DELETE_STREAM","EDIT_STREAM","_","state","action","type","payload","id","omit","mapKeys"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,YAAxB,EAAsCC,aAAtC,EAAqDC,aAArD,EAAoEC,WAApE,QAAuF,kBAAvF;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKR,aAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAAxC,OAAP;;AACF,SAAKR,YAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAAxC,OAAP;;AACF,SAAKL,WAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAAxC,OAAP;;AACF,SAAKN,aAAL;AACE,aAAOE,CAAC,CAACM,IAAF,CAAOL,KAAP,EAAcC,MAAM,CAACE,OAArB,CAAP;;AACF,SAAKP,aAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAY,WAAGD,CAAC,CAACO,OAAF,CAAUL,MAAM,CAACE,OAAjB,EAA0B,IAA1B;AAAf,OAAP;;AACF;AACE,aAAOH,KAAP;AAZJ;AAcD,CAfD","sourcesContent":["import { CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM } from '../actions/types';\nimport _ from 'lodash';\n\nexport default (state = {}, action) => {\n  switch(action.type) {\n    case CREATE_STREAM:\n      return { ...state, [action.payload.id]: action.payload }\n    case FETCH_STREAM:\n      return { ...state, [action.payload.id]: action.payload }\n    case EDIT_STREAM:\n      return { ...state, [action.payload.id]: action.payload }\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n    case FETCH_STREAMS:\n      return { ...state, ..._.mapKeys(action.payload, 'id') }\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}