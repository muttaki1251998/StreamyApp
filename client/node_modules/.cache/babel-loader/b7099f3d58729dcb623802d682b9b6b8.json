{"ast":null,"code":"import streams from '../apis/streams';\nimport { CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM } from './types';\nexport const signIn = userId => {\n  return {\n    type: 'SIGN_IN',\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: 'SIGN_OUT'\n  };\n}; // RESTFUL ROUTING // \n\nexport const createStream = formValues => {\n  return async dispatch => {\n    const response = await streams.post('/streams', formValues);\n    dispatch({\n      type: CREATE_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const fetchStream = id => {\n  return async dispatch => {\n    const response = streams.get(`/streams/${id}`);\n    dispatch({\n      type: FETCH_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const fetchStreams = () => {\n  return async dispatch => {\n    const response = await streams.get('/streams');\n    dispatch({\n      type: FETCH_STREAMS,\n      payload: response.data\n    });\n  };\n};\nexport const editStream = (id, formValues) => {\n  return async dispatch => {\n    const response = await streams.put(`/streams/${id}`, formValues);\n    dispatch({\n      type: EDIT_STREAM,\n      payload: response.data\n    });\n  };\n};\nexport const deleteStream = id => {\n  return async dispatch => {\n    await streams.delete(`/streams/id`);\n    dispatch({\n      type: DELETE_STREAM,\n      payload: id\n    });\n  };\n};","map":{"version":3,"sources":["/home/muttaki/ReactAgain/stream/client/src/actions/index.js"],"names":["streams","CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","response","post","data","fetchStream","id","get","fetchStreams","editStream","put","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,aAAtC,EAAqDC,aAArD,EAAoEC,WAApE,QAAuF,SAAvF;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAE,SADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM,C,CAMP;;AAEA,OAAO,MAAMG,YAAY,GAAIC,UAAD,IAAgB;AAC1C,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,QAAQ,GAAG,MAAMd,OAAO,CAACe,IAAR,CAAa,UAAb,EAAyBH,UAAzB,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEP,aAAR;AAAuBQ,MAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAzC,KAAD,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAMC,WAAW,GAAIC,EAAD,IAAQ;AACjC,SAAO,MAAOL,QAAP,IAAoB;AACzB,UAAMC,QAAQ,GAAGd,OAAO,CAACmB,GAAR,CAAa,YAAWD,EAAG,EAA3B,CAAjB;AACAL,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEN,YAAR;AAAsBO,MAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAxC,KAAD,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAMI,YAAY,GAAG,MAAM;AAChC,SAAO,MAAOP,QAAP,IAAoB;AACzB,UAAMC,QAAQ,GAAG,MAAMd,OAAO,CAACmB,GAAR,CAAY,UAAZ,CAAvB;AACAN,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAGL,aAAT;AAAwBM,MAAAA,OAAO,EAAEK,QAAQ,CAACE;AAA1C,KAAD,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAMK,UAAU,GAAG,CAACH,EAAD,EAAKN,UAAL,KAAoB;AAC5C,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,QAAQ,GAAG,MAAMd,OAAO,CAACsB,GAAR,CAAa,YAAWJ,EAAG,EAA3B,EAA8BN,UAA9B,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEH,WAAR;AAAqBI,MAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAvC,KAAD,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAMO,YAAY,GAAIL,EAAD,IAAQ;AAClC,SAAO,MAAOL,QAAP,IAAoB;AACzB,UAAOb,OAAO,CAACwB,MAAR,CAAgB,aAAhB,CAAP;AACAX,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,IAAI,EAAEJ,aAAR;AAAuBK,MAAAA,OAAO,EAAES;AAAhC,KAAD,CAAR;AACD,GAHD;AAID,CALM","sourcesContent":["import streams from '../apis/streams';\nimport { CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM } from './types';\n\nexport const signIn = (userId) => {\n  return {\n    type: 'SIGN_IN',\n    payload: userId\n  }\n}\n\nexport const signOut = () => {\n  return {\n    type: 'SIGN_OUT'\n  }\n}\n\n// RESTFUL ROUTING // \n\nexport const createStream = (formValues) => {\n  return async (dispatch) => {\n    const response = await streams.post('/streams', formValues);\n    dispatch({ type: CREATE_STREAM, payload: response.data })\n  }\n}\n\nexport const fetchStream = (id) => {\n  return async (dispatch) => {\n    const response = streams.get(`/streams/${id}`);\n    dispatch({ type: FETCH_STREAM, payload: response.data });\n  }\n}\n\nexport const fetchStreams = () => {\n  return async (dispatch) => {\n    const response = await streams.get('/streams');\n    dispatch({ type:  FETCH_STREAMS, payload: response.data });\n  }\n} \n\nexport const editStream = (id, formValues) => {\n  return async (dispatch) => {\n    const response = await streams.put(`/streams/${id}`, formValues);\n    dispatch({ type: EDIT_STREAM, payload: response.data });\n  }\n}\n\nexport const deleteStream = (id) => {\n  return async (dispatch) => {\n    await  streams.delete(`/streams/id`);\n    dispatch({ type: DELETE_STREAM, payload: id })\n  }\n}"]},"metadata":{},"sourceType":"module"}